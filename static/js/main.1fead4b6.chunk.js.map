{"version":3,"sources":["config.js","public/images/logo.svg","nervos.js","simpleStore.js","contracts/compiled.js","contracts/transaction.js","components/BottomNav/index.jsx","containers/Home/index.jsx","components/Submit/index.jsx","containers/Add/index.jsx","containers/Show/index.jsx","containers/List/index.jsx","Routes.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","chain","contractAddress","fromAddress","privateKey","__webpack_require__","p","Nervos","require","default","config","nervos","account","base","accounts","privateKeyToAccount","wallet","add","abi","transaction","simpleStoreContract","Contract","constant","inputs","name","type","outputs","payable","stateMutability","anonymous","indexed","bytecode","from","address","nonce","quota","chainId","version","validUntilBlock","value","BottomNav","_ref","active","_ref$showAdd","showAdd","react_default","a","createElement","className","style","display","Link","to","aria-hidden","xlinkHref","Home","src","logo","alt","components_BottomNav","Submit","_ref$text","text","onClick","_ref$disabled","disabled","concat","timeFormatter","time","padStart","submitTexts","normal","submitting","submitted","Add","state","Date","submitText","errorText","handleInput","e","_this","setState","target","handleSubmit","_this$state","getBlockNumber","then","current","tx","Object","objectSpread","methods","send","res","hash","listeners","listenToTransactionReceipt","Error","receipt","errorMessage","catch","err","JSON","stringify","_this$state2","this","getFullYear","getMonth","getDate","getHours","getMinutes","cols","rows","placeholder","onChange","React","Component","Show","_this2","props","match","params","get","call","error","_time","toLocaleString","textAlign","Record","hasYearLabel","List","times","texts","getList","reverse","Promise","all","map","console","idx","List_Record","key","history","createBrowserHistory","router","App","Router","Switch","Route","path","exact","component","Routes","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1fead4b6.chunk.js","sourcesContent":["const config = {\n  chain: 'https://node.cryptape.com',\n  contractAddress: '0x7cEB7D878a808B943F78a5089675aDe3EebA7F21',\n  fromAddress: '0xD334C73C59ce914e5Ca1D1faF55A6BE264936D04',\n  privateKey: '0xa835a9a9ec103b704ba990d25f51d039f47cb89061bd5fe55a05197f924832c4',\n}\n\nmodule.exports = config\n","module.exports = __webpack_public_path__ + \"static/media/logo.298dec47.svg\";","const {\n  default: Nervos\n} = require('@appchain/base')\n\nconst config = require('./config')\n\nconst nervos = Nervos(config.chain) // config.chain indicates that the address of Appchain to interact\nconst account = nervos.base.accounts.privateKeyToAccount(config.privateKey) //create account by private key from config\n\nnervos.base.accounts.wallet.add(account)\n\nmodule.exports = nervos","const nervos = require('./nervos')\nconst {\n  abi\n} = require('./contracts/compiled.js')\nconst {\n  contractAddress\n} = require('./config')\n\nconst transaction = require('./contracts/transaction')\nconst simpleStoreContract = new nervos.base.Contract(abi, contractAddress)\nmodule.exports = {\n  transaction,\n  simpleStoreContract\n}\n","const bytecode = \"608060405234801561001057600080fd5b506105de806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806336555b851461005c578063942b765a146100cf5780639507d39a1461013b575b600080fd5b34801561006857600080fd5b506100cd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506101e1565b005b3480156100db57600080fd5b506100e461031a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561012757808201518184015260208101905061010c565b505050509050019250505060405180910390f35b34801561014757600080fd5b50610166600480360381019080803590602001909291905050506103af565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a657808201518184015260208101905061018b565b50505050905090810190601f1680156101d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020908051906020019061024492919061050d565b5061024f33826104a0565b80826040518082805190602001908083835b6020831015156102865780518252602082019150602081019050602083039250610261565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207fe4af93ca7e370881e6f1b57272e42a3d851d3cc6d951b4f4d2e7a963914468a233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103a557602002820191906000526020600020905b815481526020019060010190808311610391575b5050505050905090565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104945780601f1061046957610100808354040283529160200191610494565b820191906000526020600020905b81548152906001019060200180831161047757829003601f168201915b50505050509050919050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061054e57805160ff191683800117855561057c565b8280016001018555821561057c579182015b8281111561057b578251825591602001919060010190610560565b5b509050610589919061058d565b5090565b6105af91905b808211156105ab576000816000905550600101610593565b5090565b905600a165627a7a7230582098ae02372b925c91c607cce5e2d87d4b212189f79b146f388e81f822758122690029\"\n\nconst abi = [\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"text\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"add\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getList\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"get\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"_sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"_text\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"name\": \"_time\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Recorded\",\n\t\t\"type\": \"event\"\n\t}\n]\n\nmodule.exports = {\n  abi,\n  bytecode\n}\n","const nervos = require('../nervos')\n\nconst transaction = {\n  from: nervos.base.accounts.wallet[0].address,\n  privateKey: nervos.base.accounts.wallet[0].privateKey,\n  nonce: 999999,\n  quota: 1000000,\n  chainId: 1,\n  version: 1,\n  validUntilBlock: 999999,\n  value: '0x0'\n};\n\nmodule.exports = transaction\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './bottomNav.css'\n\nconst BottomNav = ({ active, showAdd = true }) => (\n  <div className=\"bottomnav__bar--container\">\n    <div\n      className=\"bottomnav__button--add\"\n      style={{\n        display: showAdd ? 'flex' : 'none',\n      }}\n    >\n      <Link to=\"/add\">\n        <svg className=\"icon\" aria-hidden=\"true\">\n          <use xlinkHref=\"#icon-plus\" />\n        </svg>\n      </Link>\n    </div>\n\n    <div className=\"bottomnav__navs--container\">\n      <Link to=\"/\" className={active === 'home' ? 'active' : ''}>\n        <svg className={`icon`} aria-hidden=\"true\">\n          <use xlinkHref=\"#icon-home\" />\n        </svg>\n      </Link>\n      <Link to=\"/list\" className={active === 'list' ? 'active' : ''}>\n        <svg className={`icon`} aria-hidden=\"true\">\n          <use xlinkHref=\"#icon-user\" />\n        </svg>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default BottomNav\n","import React from 'react'\nimport logo from '../../public/images/logo.svg'\nimport BottomNav from '../../components/BottomNav'\nimport './home.css'\n\nconst Home = () => (\n  <div>\n    <div className=\"home__logo--container\">\n      <img src={logo} alt=\"logo\" />\n      <span className=\"home__logo--text\">First Forever </span>\n    </div>\n    <div className=\"home__slogan--container\">\n      <h1 className=\"home__slogan--title\">最初即永恒</h1>\n      <p className=\"home__slogan--text\">\n        人生有很多的第一次，如第一次恋爱，第一次找到工作，第一次领到工资等等，但是随着时间的流逝，还来不及回味就已经过去，如果有一个地方能让你存下这一刻的时光，永恒流传，你愿意留下你的时光吗？\n      </p>\n    </div>\n    <BottomNav active={'home'} />\n  </div>\n)\n\nexport default Home\n","import React from 'react'\nimport './submit.css'\n\nexport default ({ text = '愿此刻永恒', onClick, disabled = false }) => (\n  <button\n    onClick={onClick}\n    className={`confirm__button--primary ${disabled ? 'confirm__button--disabled' : ''}`}\n    disabled={disabled}\n  >\n    {text}\n  </button>\n)\n","import React from 'react'\nimport Submit from '../../components/Submit'\nimport BottomNav from '../../components/BottomNav'\nimport './add.css'\nimport { transaction, simpleStoreContract } from '../../simpleStore'\nimport nervos from '../../nervos'\n\nconst timeFormatter = time => ('' + time).padStart(2, '0')\n\nconst submitTexts = {\n  normal: '愿此刻永恒',\n  submitting: '保存中',\n  submitted: '保存成功',\n}\n\nclass Add extends React.Component {\n  state = {\n    text: '',\n    time: new Date(),\n    submitText: submitTexts.normal,\n    errorText: '',\n  }\n  handleInput = e => {\n    this.setState({ text: e.target.value })\n  }\n  handleSubmit = e => {\n    const { time, text } = this.state\n    nervos.base\n      .getBlockNumber()\n      .then(current => {\n        const tx = {\n          ...transaction,\n          validUntilBlock: +current + 88,\n        }\n        this.setState({\n          submitText: submitTexts.submitting,\n        })\n        return simpleStoreContract.methods.add(text, +time).send(tx)\n      })\n      .then(res => {\n        if (res.hash) {\n          return nervos.listeners.listenToTransactionReceipt(res.hash)\n        } else {\n          throw new Error('No Transaction Hash Received')\n        }\n      })\n      .then(receipt => {\n        if (!receipt.errorMessage) {\n          this.setState({ submitText: submitTexts.submitted })\n        } else {\n          throw new Error(receipt.errorMessage)\n        }\n      })\n      .catch(err => {\n        this.setState({ errorText: JSON.stringify(err) })\n      })\n  }\n  render() {\n    const { time, text, submitText, errorText } = this.state\n    return (\n      <div className=\"add__content--container\">\n        <div className=\"add__time--container\">\n          <span className=\"add__time--year\">{time.getFullYear()}</span>\n          :\n          <span className=\"add__time--month\">{time.getMonth()+1}</span>\n          :\n          <span className=\"add__time--day\">{timeFormatter(time.getDate())}</span>\n          :\n          <span className=\"add__time--hour\">{timeFormatter(time.getHours())}</span>\n          :\n          <span className=\"add__time--min\">{timeFormatter(time.getMinutes())}</span>\n        </div>\n        <div className=\"add__content--prompt\">\n          <svg className=\"icon\" aria-hidden=\"true\">\n            <use xlinkHref=\"#icon-icon-time\" />\n          </svg>\n          <span>把你觉得重要的一刻，存放在链上，永远保存，随时查看</span>\n        </div>\n        <textarea\n          cols=\"32\"\n          rows=\"10\"\n          className=\"add__content--textarea\"\n          placeholder=\"留下你的时光吧...\"\n          onChange={this.handleInput}\n          value={text}\n        />\n        <Submit text={submitText} onClick={this.handleSubmit} disabled={submitText !== submitTexts.normal} />\n        {errorText && <span className=\"warning\">{errorText}</span>}\n        <BottomNav showAdd={false} />\n      </div>\n    )\n  }\n}\nexport default Add\n","import React from 'react'\nimport nervos from '../../nervos'\nimport BottomNav from '../../components/BottomNav'\nimport { simpleStoreContract } from '../../simpleStore'\nrequire('./show.css')\n\nclass Show extends React.Component {\n  state = {\n    time: 0,\n    text: '',\n    errorText: '',\n  }\n\n  componentDidMount() {\n    const { time } = this.props.match.params\n    if (time) {\n      simpleStoreContract.methods\n        .get(time)\n        .call({\n          from: nervos.base.accounts.wallet[0].address,\n        })\n        .then(text => {\n          this.setState({ time, text })\n        })\n        .catch(error => this.setState({ errorText: JSON.stringify(error) }))\n    } else {\n      this.setState({ errorText: 'No Time Specified' })\n    }\n  }\n  render() {\n    const { time, text } = this.state\n    const _time = new Date(+time)\n    if (!time) {\n      return <div style={{ textAlign: 'center' }}>正在加载您的回忆</div>\n    }\n    return (\n      <div className=\"show__container\">\n        <span className=\"show__time\">{_time.toLocaleString()}</span>\n        <div className=\"show__text\">{text}</div>\n        <img src=\"https://picsum.photos/200/100?random\" alt=\"rand_img\" className=\"show__photo\" />\n        <BottomNav active={'list'} />\n      </div>\n    )\n  }\n}\nexport default Show\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BottomNav from '../../components/BottomNav'\nimport { simpleStoreContract } from '../../simpleStore'\nimport nervos from '../../nervos'\nrequire('./list.css')\n\nconst Record = ({ time, text, hasYearLabel }) => {\n  const _time = new Date(+time)\n  return (\n    <div className=\"list__record--container\">\n      {hasYearLabel ? <div className=\"list__record--year\">{_time.getFullYear()}</div> : null}\n      <span>{`${_time.getMonth() + 1}-${_time.getDate()} ${_time.getHours()}:${_time.getMinutes()}`}</span>\n      <Link to={`/show/${time}`}>\n        <div>{text}</div>\n      </Link>\n    </div>\n  )\n}\n\nclass List extends React.Component {\n  state = {\n    times: [],\n    texts: [],\n  }\n  componentDidMount() {\n    const from = nervos.base.accounts.wallet[0] ? nervos.base.accounts.wallet[0].address : '';\n    simpleStoreContract.methods\n      .getList()\n      .call({\n        from,\n      })\n      .then(times => {\n        times.reverse()\n        this.setState({ times })\n        return Promise.all(times.map(time => simpleStoreContract.methods.get(time).call({ from })))\n      })\n      .then(texts => {\n        this.setState({ texts })\n      })\n      .catch(console.error)\n  }\n  render() {\n    const { times, texts } = this.state\n    return (\n      <div className=\"list__record--page\">\n        {times.map((time, idx) => (\n          <Record\n            time={time}\n            text={texts[idx]}\n            key={time}\n            hasYearLabel={idx === 0 || new Date(+time).getFullYear() !== new Date(+times[idx - 1]).getFullYear()}\n          />\n        ))}\n        <BottomNav active={'list'} />\n      </div>\n    )\n  }\n}\nexport default List\n","import React from 'react'\nimport { Router, Route, Switch } from 'react-router'\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport Home from './containers/Home'\nimport Add from './containers/Add'\nimport Show from './containers/Show'\nimport List from './containers/List'\n\nconst history = createBrowserHistory()\n\nconst router = App => (\n  <Router history={history}>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/add\" exact component={Add} />\n      <Route path=\"/list\" exact component={List} />\n      <Route path=\"/show/:time\" exact component={Show} />\n    </Switch>\n  </Router>\n)\n\nexport default router\n","import React, {\n  Component\n} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Routes from './Routes'\n\nclass App extends Component {\n  render() {\n    return ( <\n      Routes / >\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <h1 className=\"App-title\">Welcome to React</h1>\n      //   </header>\n      //   <p className=\"App-intro\">\n      //     To get started, edit <code>src/App.js</code> and save to reload.\n      //   </p>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}